#!/bin/bash

set -e

# >>>>>>>>>>>>>>>>>>>>>>>>>>
# Vars
# >>>>>>>>>>>>>>>>>>>>>>>>>>

tags="$1"
PKGS=("ansible" "ansible-lint" "python" "python-pip" "python-pipx" "curl" "wget" "git")

if [ -z $tags ]; then
  tags="all"
fi


# >>>>>>>>>>>>>>>>>>>>>>>>>>
# Helpers
# >>>>>>>>>>>>>>>>>>>>>>>>>>

function install_pkgs(){
    to_install=()
    already_installed=()
    for pkg in "${PKGS[@]}"; do
        if ! pacman -Qi $pkg &> /dev/null; then
            to_install+=("${pkg}");
        else
            already_installed+=("${pkg}");
        fi
    done

    # Echo out already installed packages
    if [ ${#already_installed[@]} -gt 0 ]; then
        echo "already installed: ${already_installed[@]}"
    fi

    # Install packages
    if [ ${#to_install[@]} -gt 0 ]; then
        echo "installing: ${to_install[@]}"
        sudo pacman -S "${to_install[@]}" |\
            awk '{if ($1 ~ /installing/) {print "installing: " $2} else if ($1 ~ /upgrading/) {print "upgrading: " $2}}'
    fi

}

function install_if_missing() {
    PKG_MANAGER="${2:-"pipx"}"
    for pkg in "${PKGS[@]}"; do
        if ! pacman -Qi $pkg &> /dev/null; then
            to_install+=("${pkg}");
        fi
    done

    # Install packages
    if [ ${#to_install[@]} -gt 0 ]; then
        echo "installing: ${to_install[@]}"
        sudo pacman -S "${to_install[@]}" |\
            awk '{if ($1 ~ /installing/) {print "installing: " $2} else if ($1 ~ /upgrading/) {print "upgrading: " $2}}'
    fi
}

# >>>>>>>>>>>>>>>>>>>>>>>>>>
# OPERATING SYSTEM SETUP
# >>>>>>>>>>>>>>>>>>>>>>>>>>

function windows_setup(){
    echo "No :)"
    exit 1
}

function mac_setup(){
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    brew install git python pipx
}

function linux_setup(){
    source /etc/os-release
    if [ "$ID_LIKE" == "arch" ]
    then
        install_pkgs PKGS[@]
    else
        echo "Other linux distros not supported yet. :/"
        exit 1 
    fi
}


# >>>>>>>>>>>>>>>>>>>>>>>>>>
# BOOTSTRAP
# >>>>>>>>>>>>>>>>>>>>>>>>>>

function install_ansible() {
    # install_if_missing ["ansible" "ansible-lint" "ansibl-galaxy"]
    install_pkgs ["ansible" "ansible-lint" "ansibl-galaxy"]
    ansible-galaxy install -r requirements.yml &> /dev/null
}

function bootstrap() {
    case "$OSTYPE" in
    darwin*)  mac_setup ;; 
    linux*)   linux_setup ;;
    msys*)    windows_setup ;;
    *)        echo "unknown: $OSTYPE" ;;
    esac

    install_ansible

    export PATH="$PATH:~/.local/bin"
    ansible-playbook -i hosts bootstrap.yml --tags $tags
    # ansible-playbook -i hosts bootstrap.yml --ask-become-pass --tags $tags
}

bootstrap